{"version":3,"file":"static/js/522.0c7f7719.chunk.js","mappings":"6PAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAKMC,EAAoB,SAAAC,GAI/B,OAHiBF,EAAAA,EAAAA,IAAA,gCACUD,EADV,kBAC2BG,EAD3B,8CAIlB,EASYC,EAAY,SAAAC,GAIvB,OAHiBJ,EAAAA,EAAAA,IAAA,iBACLI,EADK,4BACsBL,EADtB,mBAIlB,EAEYM,EAAe,SAAAD,GAI1B,OAHiBJ,EAAAA,EAAAA,IAAA,iBACLI,EADK,4BACsBL,EADtB,mBAIlB,EAEYO,EAAe,SAAAC,GAAG,OAC7BA,EAAG,yCACmCA,GADnC,qGAD0B,C,iICpClBC,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAWD,EAAAA,GAAAA,IAAH,gEAKRE,EAAaF,EAAAA,GAAAA,GAAH,0DAKVG,EAAYH,EAAAA,GAAAA,KAAH,6CAITI,EAAYJ,EAAAA,GAAAA,EAAH,+D,mBCZTK,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEnBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,eAAgBC,EACnCH,EADmCG,SAAUC,EAC7CJ,EAD6CI,OAAQC,EACrDL,EADqDK,aAevD,OACE,UAACZ,EAAD,YACE,SAACE,EAAD,CAAUW,KAAKf,EAAAA,EAAAA,IAAaU,GAAcM,IAAKL,KAC/C,4BACE,SAACN,EAAD,UAAaM,KACb,UAACJ,EAAD,YACE,SAACD,EAAD,0BACCW,KAAKC,MAAsB,IAAfJ,EAAsB,IAFrC,QAIA,UAACP,EAAD,YACE,SAACD,EAAD,yBACCM,MAEH,UAACL,EAAD,YACE,SAACD,EAAD,uBAzBFO,EACKA,EACJM,KAAI,SAAAC,GACH,OAAOA,EAAGC,IACX,IACAC,KAAK,MAED,kCAwBZ,EC3CYC,EAAWpB,EAAAA,GAAAA,GAAH,mEAKRqB,EAAUrB,EAAAA,GAAAA,GAAH,iG,UCFPsB,EAAY,WAAO,IAAD,IACvBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,SAACJ,EAAD,sCACA,UAACC,EAAD,YACE,yBACE,SAAC,KAAD,CAAMI,GAAG,OAAOC,MAAO,CAAEC,KAAI,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,MAAhD,qBAIF,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAI,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,MAAnD,4BAOT,E,UCtBYC,EAAY5B,EAAAA,GAAAA,IAAH,8CAIT6B,GAAU7B,EAAAA,EAAAA,IAAO8B,EAAAA,GAAP9B,CAAH,uW,UCKL,SAAS+B,IAAgB,IAAD,IAC7BpC,GAAYqC,EAAAA,EAAAA,MAAZrC,QACR,GAKIsC,EAAAA,EAAAA,IAAwBtC,GAJpBW,EADR,EACE4B,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,UAGId,GAAWC,EAAAA,EAAAA,MAGXc,EAAa,iBAAGf,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAE/C,OACE,UAACC,EAAD,YACE,SAACC,EAAD,CAASJ,GAAIa,EAAb,qBACCH,GAAaC,GACZ,SAACG,EAAA,EAAD,IACEF,GAAa/B,GACf,SAACD,EAAD,CAAYC,aAAcA,KAE1B,0DAIF,SAACgB,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["api/api-service.js","components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/AddInform/AddInform.styled.jsx","components/AddInform/AddInform.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '48978cb53ccabb273ee7577d68beda02';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const fetchTrendingMovies = () => {\n  const response = axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const fetchMoviesByName = searchValue => {\n  const response = axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1&include_adult=false`\n  );\n  return response;\n};\n\nexport const fetchMoviesById = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchCast = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchReviews = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getPosterUrl = url =>\n  url\n    ? `https://image.tmdb.org/t/p/w500${url}`\n    : `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQq_wGA4J08YoSd2-aTz9OQrZeSA2fnZxEbOA&usqp=CAU`;\n","import styled from 'styled-components';\n\nexport const CartMovie = styled.div`\n  display: flex;\n`;\n\nexport const ImgMovie = styled.img`\n  width: 360px;\n  margin-right: 20px;\n`;\n\nexport const TitleMovie = styled.h2`\n  font-size: 42px;\n  margin: 0;\n`;\n\nexport const SpanMovie = styled.span`\n  font-weight: 500;\n`;\n\nexport const DescMovie = styled.p`\n  font-size: 24px;\n  line-height: 2;\n`;\n","import {\n  CartMovie,\n  DescMovie,\n  ImgMovie,\n  SpanMovie,\n  TitleMovie,\n} from './MoviesItem.styled';\nimport { getPosterUrl } from '../../api/api-service';\nexport const MoviesItem = ({ movieDetails }) => {\n  // console.log(movieDetails);\n  const { poster_path, original_title, overview, genres, vote_average } =\n    movieDetails;\n\n  const genresAll = () => {\n    if (genres) {\n      return genres\n        .map(el => {\n          return el.name;\n        })\n        .join(', ');\n    } else {\n      return 'genres are not defined.';\n    }\n  };\n\n  return (\n    <CartMovie>\n      <ImgMovie src={getPosterUrl(poster_path)} alt={original_title} />\n      <div>\n        <TitleMovie>{original_title}</TitleMovie>\n        <DescMovie>\n          <SpanMovie>User Score </SpanMovie>\n          {Math.round((vote_average * 100) / 10)}%\n        </DescMovie>\n        <DescMovie>\n          <SpanMovie>Overview: </SpanMovie>\n          {overview}\n        </DescMovie>\n        <DescMovie>\n          <SpanMovie>Genres: </SpanMovie>\n          {genresAll()}\n        </DescMovie>\n      </div>\n    </CartMovie>\n  );\n};\n","import styled from 'styled-components';\n\nexport const AddTitle = styled.h3`\n  font-size: 38px;\n  text-align: center;\n`;\n\nexport const AddList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  list-style: none;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { AddList, AddTitle } from './AddInform.styled';\nimport { Link } from '../NavBar/NavBar.styled';\n\nexport const AddInform = () => {\n  const location = useLocation();\n\n  return (\n    <>\n      <AddTitle>Additional information</AddTitle>\n      <AddList>\n        <li>\n          <Link to=\"cast\" state={{ from: location?.state?.from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location?.state?.from }}>\n            Reviews\n          </Link>\n        </li>\n      </AddList>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 20px 30px;\n`;\n\nexport const LinkBtn = styled(Link)`\n  display: inline-block;\n  margin-bottom: 20px;\n  padding: 4px 12px;\n  background-color: inherit;\n  border: 1px solid #000;\n  border-radius: 5px;\n  color: #000;\n  font-weight: 500;\n  text-decoration: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #ff6b01;\n    border: 1px solid #ff6b01;\n    color: #fff;\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\n// import { useEffect, useState } from 'react';\n// import { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\n\n// import * as API from '../../api/api-service';\n\nimport { MoviesItem } from 'components/MoviesItem/MoviesItem';\nimport { AddInform } from 'components/AddInform/AddInform';\nimport { Container, LinkBtn } from './MovieDetails.styled';\nimport { useFetchMoviesByIdQuery } from 'redux/movieSlice';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const {\n    data: movieDetails,\n    isLoading,\n    isFetching,\n    isSuccess,\n  } = useFetchMoviesByIdQuery(movieId);\n  \n  const location = useLocation();\n  \n\n  const handlerGoBack = location?.state?.from ?? '/';\n\n  return (\n    <Container>\n      <LinkBtn to={handlerGoBack}>Go Back</LinkBtn>\n      {isLoading || isFetching ? (\n        <Loader />\n      ) : isSuccess || movieDetails ? (\n        <MoviesItem movieDetails={movieDetails} />\n      ) : (\n        <p>No trending movies available.</p>\n      )}\n      {/* {isError && <Navigate to=\"/\" replace />} */}\n\n      <AddInform />\n      <Outlet />\n    </Container>\n  );\n}\n"],"names":["API_KEY","axios","fetchMoviesByName","searchValue","fetchCast","movieId","fetchReviews","getPosterUrl","url","CartMovie","styled","ImgMovie","TitleMovie","SpanMovie","DescMovie","MoviesItem","movieDetails","poster_path","original_title","overview","genres","vote_average","src","alt","Math","round","map","el","name","join","AddTitle","AddList","AddInform","location","useLocation","to","state","from","Container","LinkBtn","Link","MovieDetails","useParams","useFetchMoviesByIdQuery","data","isLoading","isFetching","isSuccess","handlerGoBack","Loader"],"sourceRoot":""}