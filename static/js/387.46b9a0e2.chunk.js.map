{"version":3,"file":"static/js/387.46b9a0e2.chunk.js","mappings":"6PAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAKMC,EAAoB,SAAAC,GAI/B,OAHiBF,EAAAA,EAAAA,IAAA,gCACUD,EADV,kBAC2BG,EAD3B,8CAIlB,EASYC,EAAY,SAAAC,GAIvB,OAHiBJ,EAAAA,EAAAA,IAAA,iBACLI,EADK,4BACsBL,EADtB,mBAIlB,EAEYM,EAAe,SAAAD,GAI1B,OAHiBJ,EAAAA,EAAAA,IAAA,iBACLI,EADK,4BACsBL,EADtB,mBAIlB,EAEYO,EAAe,SAAAC,GAAG,OAC7BA,EAAG,yCACmCA,GADnC,qGAD0B,C,qJCpClBC,EAAcC,EAAAA,GAAAA,GAAH,6CAIXC,EAAcD,EAAAA,GAAAA,GAAH,uNAUXE,EAAgBF,EAAAA,GAAAA,GAAH,sEAKbG,EAAcH,EAAAA,GAAAA,EAAH,+D,SCTT,SAASI,IACtB,IAAQT,GAAYU,EAAAA,EAAAA,MAAZV,QACR,GAA8BW,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAiBf,GACdgB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPJ,EAAWI,EAAKC,QACjB,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,GACJ,GAAE,CAACtB,KAGF,8BACsB,IAAnBY,EAAQW,QACP,SAACnB,EAAD,UACGQ,EAAQY,KAAI,SAAAC,GACX,OACE,UAACnB,EAAD,YACE,uBAAImB,EAAOC,WACX,SAACnB,EAAD,UAAgBkB,EAAOE,WAFPF,EAAOG,GAK5B,OAGH,SAACpB,EAAD,wDAIP,C","sources":["api/api-service.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '48978cb53ccabb273ee7577d68beda02';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const fetchTrendingMovies = () => {\n  const response = axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const fetchMoviesByName = searchValue => {\n  const response = axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1&include_adult=false`\n  );\n  return response;\n};\n\nexport const fetchMoviesById = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchCast = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchReviews = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getPosterUrl = url =>\n  url\n    ? `https://image.tmdb.org/t/p/w500${url}`\n    : `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQq_wGA4J08YoSd2-aTz9OQrZeSA2fnZxEbOA&usqp=CAU`;\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 20px;\n  padding: 20px 30px;\n  box-shadow: rgba(26, 7, 22, 0.267) 0px 2px 10px 0px;\n  border-radius: 5px;\n  text-align: justify;\n  line-height: 1.5;\n  font-size: 16px;\n`;\n\nexport const ReviewsAuthor = styled.h4`\n  text-align: right;\n  margin-right: 100px;\n`;\n\nexport const ReviewsText = styled.p`\n  font-size: 24px;\n  color: #2a2a2a;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport * as API from '../../api/api-service';\nimport {\n  ReviewsAuthor,\n  ReviewsItem,\n  ReviewsList,\n  ReviewsText,\n} from './Reviews.styled';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.fetchReviews(movieId)\n      .then(({ data }) => {\n        setReviews(data.results);\n      })\n      .catch(error => {\n        toast.error(error.message);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ReviewsList>\n          {reviews.map(review => {\n            return (\n              <ReviewsItem key={review.id}>\n                <p>{review.content}</p>\n                <ReviewsAuthor>{review.author}</ReviewsAuthor>\n              </ReviewsItem>\n            );\n          })}\n        </ReviewsList>\n      ) : (\n        <ReviewsText>We don't have any reviews for this movie</ReviewsText>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","axios","fetchMoviesByName","searchValue","fetchCast","movieId","fetchReviews","getPosterUrl","url","ReviewsList","styled","ReviewsItem","ReviewsAuthor","ReviewsText","Reviews","useParams","useState","reviews","setReviews","useEffect","API","then","data","results","catch","error","toast","message","length","map","review","content","author","id"],"sourceRoot":""}