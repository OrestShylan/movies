{"version":3,"file":"static/js/736.86e1256f.chunk.js","mappings":"6PAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAKMC,EAAoB,SAAAC,GAI/B,OAHiBF,EAAAA,EAAAA,IAAA,gCACUD,EADV,kBAC2BG,EAD3B,8CAIlB,EASYC,EAAY,SAAAC,GAIvB,OAHiBJ,EAAAA,EAAAA,IAAA,iBACLI,EADK,4BACsBL,EADtB,mBAIlB,EAEYM,EAAe,SAAAD,GAI1B,OAHiBJ,EAAAA,EAAAA,IAAA,iBACLI,EADK,4BACsBL,EADtB,mBAIlB,EAEYO,EAAe,SAAAC,GAAG,OAC7BA,EAAG,yCACmCA,GADnC,qGAD0B,C,uJCpClBC,EAAWC,EAAAA,GAAAA,GAAH,wJAQRC,EAAWD,EAAAA,GAAAA,GAAH,wJAQRE,EAAUF,EAAAA,GAAAA,IAAH,sGAOPG,EAAWH,EAAAA,GAAAA,GAAH,sCAIRI,EAAWJ,EAAAA,GAAAA,EAAH,0C,SCtBN,SAASK,IACtB,IAAQV,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAAwBY,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,GAAUC,GACPgB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPH,EAAQG,EAAKJ,KACd,IACAK,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,GACJ,GAAE,CAACrB,KAGF,SAACI,EAAD,UACGS,EAAKS,KAAI,SAAAC,GACR,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,UAAWC,EAAiBJ,EAAjBI,aAE7B,OACE,UAACrB,EAAD,YACE,SAACC,EAAD,CAASqB,KAAK1B,EAAAA,EAAAA,IAAayB,GAAeE,IAAKJ,IAAS,KACxD,SAACjB,EAAD,UAAWiB,KACX,UAAChB,EAAD,yBAAsBiB,OAHTF,EAMlB,KAGN,C","sources":["api/api-service.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '48978cb53ccabb273ee7577d68beda02';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const fetchTrendingMovies = () => {\n  const response = axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const fetchMoviesByName = searchValue => {\n  const response = axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1&include_adult=false`\n  );\n  return response;\n};\n\nexport const fetchMoviesById = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchCast = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchReviews = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getPosterUrl = url =>\n  url\n    ? `https://image.tmdb.org/t/p/w500${url}`\n    : `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQq_wGA4J08YoSd2-aTz9OQrZeSA2fnZxEbOA&usqp=CAU`;\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: calc(-1 * 16px);\n  margin-bottom: calc(-1 * 32px);\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc(100% / 3 - 16px);\n  margin-bottom: 72px;\n  margin-right: 16px;\n  max-width: 200px;\n  max-height: 200px;\n`;\n\nexport const CastImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const CastName = styled.h4`\n  margin: 0;\n`;\n\nexport const CastDesc = styled.p`\n  margin: 2px 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { fetchCast, getPosterUrl } from '../../api/api-service';\nimport { CastDesc, CastImg, CastItem, CastList, CastName } from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(({ data }) => {\n        setCast(data.cast);\n      })\n      .catch(error => {\n        toast.error(error.message);\n      });\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {cast.map(actor => {\n        const { id, name, character, profile_path } = actor;\n\n        return (\n          <CastItem key={id}>\n            <CastImg src={getPosterUrl(profile_path)} alt={name} />{' '}\n            <CastName>{name}</CastName>\n            <CastDesc>Character: {character}</CastDesc>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n}\n"],"names":["API_KEY","axios","fetchMoviesByName","searchValue","fetchCast","movieId","fetchReviews","getPosterUrl","url","CastList","styled","CastItem","CastImg","CastName","CastDesc","Cast","useParams","useState","cast","setCast","useEffect","then","data","catch","error","toast","message","map","actor","id","name","character","profile_path","src","alt"],"sourceRoot":""}