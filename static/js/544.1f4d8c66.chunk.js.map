{"version":3,"file":"static/js/544.1f4d8c66.chunk.js","mappings":"6PAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAKMC,EAAoB,SAAAC,GAI/B,OAHiBF,EAAAA,EAAAA,IAAA,gCACUD,EADV,kBAC2BG,EAD3B,8CAIlB,EASYC,EAAY,SAAAC,GAIvB,OAHiBJ,EAAAA,EAAAA,IAAA,iBACLI,EADK,4BACsBL,EADtB,mBAIlB,EAEYM,EAAe,SAAAD,GAI1B,OAHiBJ,EAAAA,EAAAA,IAAA,iBACLI,EADK,4BACsBL,EADtB,mBAIlB,EAEYO,EAAe,SAAAC,GAAG,OAC7BA,EAAG,yCACmCA,GADnC,qGAD0B,C,8HCnClBC,EAAOC,EAAAA,GAAAA,GAAH,wJAQJC,EAAOD,EAAAA,GAAAA,GAAH,4SAYJE,EAAQF,EAAAA,GAAAA,IAAH,sGAOLG,EAAQH,EAAAA,GAAAA,EAAH,0MAWLI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kD,SCpCRM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIJ,GACPA,GAAWK,MAAMC,QAAQN,IAI5B,SAACR,EAAD,UACGQ,EAAOO,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACvC,OACE,SAACjB,EAAD,WACE,UAACG,EAAD,CAAUe,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMb,GAA9C,WACE,SAACN,EAAD,CAAOoB,KAAKzB,EAAAA,EAAAA,IAAaqB,GAAcK,IAAKN,IAAkB,KAC9D,SAACd,EAAD,iBAAQa,QAAR,IAAQA,EAAAA,EAASC,QAHVF,EAOd,OAbI,+CAgBV,C,yHCOc,SAASS,IACtB,OACEC,EAAAA,EAAAA,MADMC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,UAI/BtB,EAASmB,EAAOA,EAAKI,QAAU,GAErC,OACE,UAAC,IAAD,YACE,SAAC,IAAD,oCACCH,GAAaC,GACZ,SAAC,IAAD,IACEC,GACF,SAAC,IAAD,CAAYtB,OAAQA,KAEpB,2DAIP,C,yGCjDYwB,EAAO/B,EAAAA,GAAAA,IAAH,sIAQJG,EAAQH,EAAAA,GAAAA,GAAH,8F","sources":["api/api-service.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '48978cb53ccabb273ee7577d68beda02';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const fetchTrendingMovies = () => {\n  const response = axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const fetchMoviesByName = searchValue => {\n  const response = axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1&include_adult=false`\n  );\n  return response;\n};\n\nexport const fetchMoviesById = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchCast = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const fetchReviews = movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getPosterUrl = url =>\n  url\n    ? `https://image.tmdb.org/t/p/w500${url}`\n    : `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQq_wGA4J08YoSd2-aTz9OQrZeSA2fnZxEbOA&usqp=CAU`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: calc(-1 * 16px);\n  margin-bottom: calc(-1 * 32px);\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 3 - 16px);\n  margin-bottom: 52px;\n  margin-right: 16px;\n  max-width: 200px;\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.p`\n  margin: 8px 0;\n  color: #000;\n  font-size: 14px;\n  font-weight: 500;\n  text-transform: uppercase;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getPosterUrl } from '../../api/api-service';\nimport { List, Item, Image, Title, ItemLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  console.log(movies);\n  if (!movies || !Array.isArray(movies)) {\n    return <p>No movies available.</p>;\n  }\n  return (\n    <List>\n      {movies.map(({ id, title, original_name, poster_path }) => {\n        return (\n          <Item key={id}>\n            <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n              <Image src={getPosterUrl(poster_path)} alt={original_name} />{' '}\n              <Title>{title ?? original_name}</Title>\n            </ItemLink>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\n// ========================================================================================================\n// export const MoviesList = ({ movies }) => {\n//   const location = useLocation();\n\n//   if (!Array.isArray(movies) || movies.length === 0) {\n//     return <p>No movies found.</p>;\n//   }\n\n//   return (\n//     <List>\n//       {movies.map(({ id, title, original_name, poster_path }) => {\n//         return (\n//           <Item key={id}>\n//             <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n//               <Image src={getPosterUrl(poster_path)} alt={original_name} />{' '}\n//               <Title>{title ?? original_name}</Title>\n//             </ItemLink>\n//           </Item>\n//         );\n//       })}\n//     </List>\n//   );\n// };\n\n// ==========================================================================================================\n\n// export const MoviesList = ({ movies }) => {\n//   const location = useLocation();\n//   if (!movies) {\n//     return null;\n//   }\n\n//   return (\n//     <List>\n//       {movies.results.map(({ id, title, original_name, poster_path }) => {\n//         return (\n//           <Item key={id}>\n//             <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n//               <Image src={getPosterUrl(poster_path)} alt={original_name} />{' '}\n//               <Title>{title ?? original_name}</Title>\n//             </ItemLink>\n//           </Item>\n//         );\n//       })}\n//     </List>\n//   );\n// };\n","// import * as API from '../../api/api-service';\n// import { useEffect, useState } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Main, Title } from './Home.styled';\nimport { useFetchTrendingMoviesQuery } from 'redux/movieSlice';\n\n// export default function Home() {\n\n//   const {\n//     data: movies,\n//     isLoading,\n//     isFetching,\n//     isSuccess,\n//   } = useFetchTrendingMoviesQuery();\n\n// console.log(movies);\n\n//   return (\n//     <Main>\n//       <Title>Trending Movies Today</Title>\n//       {isLoading || isFetching ? (\n//         <Loader />\n//       ) : isSuccess || movies ? (\n//         <MoviesList movies={movies} />\n//       ) : (\n//         <p>No trending movies available.</p>\n//       )}\n//     </Main>\n//   );\n// }\n\nexport default function Home() {\n  const { data, isLoading, isFetching, isSuccess } =\n    useFetchTrendingMoviesQuery();\n\n  // Отримуємо масив трендових фільмів з властивості 'results'\n  const movies = data ? data.results : [];\n\n  return (\n    <Main>\n      <Title>Trending Movies Today</Title>\n      {isLoading || isFetching ? (\n        <Loader />\n      ) : isSuccess ? (\n        <MoviesList movies={movies} />\n      ) : (\n        <p>No trending movies available.</p>\n      )}\n    </Main>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Main = styled.div`\n  width: 1440px;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 32px;\n  font-weight: 600;\n`;\n"],"names":["API_KEY","axios","fetchMoviesByName","searchValue","fetchCast","movieId","fetchReviews","getPosterUrl","url","List","styled","Item","Image","Title","ItemLink","Link","MoviesList","movies","location","useLocation","console","log","Array","isArray","map","id","title","original_name","poster_path","to","state","from","src","alt","Home","useFetchTrendingMoviesQuery","data","isLoading","isFetching","isSuccess","results","Main"],"sourceRoot":""}