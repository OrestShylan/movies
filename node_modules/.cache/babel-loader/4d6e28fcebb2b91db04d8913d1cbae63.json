{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orest Shylan\\\\Documents\\\\GitHub\\\\movies\\\\src\\\\pages\\\\Movies\\\\Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as API from '../../api/api-service';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Main } from '../Home/Home.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n\n  const [moviesByName, setMoviesByName] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSearchForm = searchValue => {\n    setSearchParams({\n      query: searchValue\n    });\n  };\n\n  useEffect(() => {\n    const value = searchParams.get('query');\n\n    if (!value) {\n      return;\n    }\n\n    if (!isLoading) {\n      setIsLoading(true);\n      API.fetchMoviesByName(value).then(_ref => {\n        let {\n          data\n        } = _ref;\n        setMoviesByName(data.results);\n        setIsLoading(false);\n      }).catch(error => {\n        setIsLoading(false);\n        toast.error(error.message);\n      });\n    }\n  }, [searchParams, isLoading]);\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      onSubmit: handleSearchForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: moviesByName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movies, \"9AnJ5kBwjAG+Ry07MBsSvhg/df0=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/Users/Orest Shylan/Documents/GitHub/movies/src/pages/Movies/Movies.jsx"],"names":["useState","useEffect","useSearchParams","toast","API","SearchForm","Loader","MoviesList","Main","Movies","moviesByName","setMoviesByName","searchParams","setSearchParams","isLoading","setIsLoading","handleSearchForm","searchValue","query","value","get","fetchMoviesByName","then","data","results","catch","error","message"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,uBAArB;AAEA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,IAAT,QAAqB,qBAArB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCX,eAAe,EAAvD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMgB,gBAAgB,GAAGC,WAAW,IAAI;AACtCJ,IAAAA,eAAe,CAAC;AAAEK,MAAAA,KAAK,EAAED;AAAT,KAAD,CAAf;AACD,GAFD;;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,KAAK,GAAGP,YAAY,CAACQ,GAAb,CAAiB,OAAjB,CAAd;;AACA,QAAI,CAACD,KAAL,EAAY;AACV;AACD;;AAED,QAAI,CAACL,SAAL,EAAgB;AACdC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAX,MAAAA,GAAG,CAACiB,iBAAJ,CAAsBF,KAAtB,EACGG,IADH,CACQ,QAAc;AAAA,YAAb;AAAEC,UAAAA;AAAF,SAAa;AAClBZ,QAAAA,eAAe,CAACY,IAAI,CAACC,OAAN,CAAf;AACAT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJH,EAKGU,KALH,CAKSC,KAAK,IAAI;AACdX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAZ,QAAAA,KAAK,CAACuB,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD,OARH;AASD;AACF,GAnBQ,EAmBN,CAACf,YAAD,EAAeE,SAAf,CAnBM,CAAT;AAqBA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,SAAS,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFhB,eAIE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEJ;AAApB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtCuBD,M;UAEkBP,e;;;KAFlBO,M","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport * as API from '../../api/api-service';\r\n\r\nimport { SearchForm } from 'components/SearchForm/SearchForm';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { MoviesList } from 'components/MoviesList/MoviesList';\r\nimport { Main } from '../Home/Home.styled';\r\n\r\nexport default function Movies() {\r\n  const [moviesByName, setMoviesByName] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSearchForm = searchValue => {\r\n    setSearchParams({ query: searchValue });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const value = searchParams.get('query');\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    if (!isLoading) {\r\n      setIsLoading(true);\r\n\r\n      API.fetchMoviesByName(value)\r\n        .then(({ data }) => {\r\n          setMoviesByName(data.results);\r\n          setIsLoading(false);\r\n        })\r\n        .catch(error => {\r\n          setIsLoading(false);\r\n          toast.error(error.message);\r\n        });\r\n    }\r\n  }, [searchParams, isLoading]);\r\n\r\n  return (\r\n    <Main>\r\n      <SearchForm onSubmit={handleSearchForm} />\r\n      {isLoading && <Loader />}\r\n\r\n      <MoviesList movies={moviesByName} />\r\n    </Main>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}