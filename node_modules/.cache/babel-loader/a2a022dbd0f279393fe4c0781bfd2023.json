{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orest Shylan\\\\Documents\\\\GitHub\\\\movies\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\n// import * as API from '../../api/api-service';\n// import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Main, Title } from './Home.styled';\nimport { useFetchTrendingMoviesQuery } from 'redux/movieSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    data: movies,\n    isLoading\n  } = useFetchTrendingMoviesQuery(); // console.log(data);\n  // const [trendingMovies, setTrendingMovies] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // useEffect(() => {\n  //   setIsLoading(true);\n  //   API.fetchTrendingMovies()\n  //     .then(({ data }) => {\n  //       setTrendingMovies(data.results);\n  //     })\n  //     .catch(error => {\n  //       console.log(error);\n  //     })\n  //     .finally(() => {\n  //       setIsLoading(false);\n  //     });\n  // }, []);\n  // const { results: movies } = data;\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Trending Movies Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"3CXla74P8KqH+fphs5AnxXLYuj4=\", false, function () {\n  return [useFetchTrendingMoviesQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Orest Shylan/Documents/GitHub/movies/src/pages/Home/Home.jsx"],"names":["MoviesList","Loader","Main","Title","useFetchTrendingMoviesQuery","Home","data","movies","isLoading"],"mappings":";;;AAAA;AACA;AACA,SAASA,UAAT,QAA2B,kCAA3B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,eAA5B;AACA,SAASC,2BAAT,QAA4C,kBAA5C;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA;AAAhB,MAA8BJ,2BAA2B,EAA/D,CAD6B,CAE7B;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;AACE,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGI,SAAS,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAgB,QAAC,UAAD;AAAY,MAAA,MAAM,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA3BuBF,I;UACcD,2B;;;KADdC,I","sourcesContent":["// import * as API from '../../api/api-service';\r\n// import { useState, useEffect } from 'react';\r\nimport { MoviesList } from 'components/MoviesList/MoviesList';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { Main, Title } from './Home.styled';\r\nimport { useFetchTrendingMoviesQuery } from 'redux/movieSlice';\r\n\r\nexport default function Home() {\r\n  const { data: movies, isLoading } = useFetchTrendingMoviesQuery();\r\n  // console.log(data);\r\n\r\n  // const [trendingMovies, setTrendingMovies] = useState([]);\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   setIsLoading(true);\r\n  //   API.fetchTrendingMovies()\r\n  //     .then(({ data }) => {\r\n  //       setTrendingMovies(data.results);\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(error);\r\n  //     })\r\n  //     .finally(() => {\r\n  //       setIsLoading(false);\r\n  //     });\r\n  // }, []);\r\n// const { results: movies } = data;\r\n  return (\r\n    <Main>\r\n      <Title>Trending Movies Today</Title>\r\n      {isLoading ? <Loader /> : <MoviesList movies={movies} />}\r\n    </Main>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}