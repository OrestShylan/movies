{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orest Shylan\\\\Documents\\\\GitHub\\\\movies\\\\src\\\\components\\\\Reviews\\\\Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as API from '../../api/api-service';\nimport { ReviewsAuthor, ReviewsItem, ReviewsList, ReviewsText } from './Reviews.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Reviews() {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    API.fetchReviews(movieId).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setReviews(data.results);\n    }).catch(error => {\n      toast.error(error.message);\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: reviews.length !== 0 ? /*#__PURE__*/_jsxDEV(ReviewsList, {\n      children: reviews.map(review => {\n        return /*#__PURE__*/_jsxDEV(ReviewsItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: review.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ReviewsAuthor, {\n            children: review.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, review.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ReviewsText, {\n      children: \"We don't have any reviews for this movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Reviews, \"tE9IYNGCem0GPPIw2fRHsfSTlmg=\", false, function () {\n  return [useParams];\n});\n\n_c = Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["C:/Users/Orest Shylan/Documents/GitHub/movies/src/components/Reviews/Reviews.jsx"],"names":["useEffect","useState","useParams","toast","API","ReviewsAuthor","ReviewsItem","ReviewsList","ReviewsText","Reviews","movieId","reviews","setReviews","fetchReviews","then","data","results","catch","error","message","length","map","review","content","author","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,uBAArB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,kBALP;;;AAOA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,GAAG,CAACS,YAAJ,CAAiBH,OAAjB,EACGI,IADH,CACQ,QAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAClBH,MAAAA,UAAU,CAACG,IAAI,CAACC,OAAN,CAAV;AACD,KAHH,EAIGC,KAJH,CAISC,KAAK,IAAI;AACdf,MAAAA,KAAK,CAACe,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD,KANH;AAOD,GARQ,EAQN,CAACT,OAAD,CARM,CAAT;AAUA,sBACE;AAAA,cACGC,OAAO,CAACS,MAAR,KAAmB,CAAnB,gBACC,QAAC,WAAD;AAAA,gBACGT,OAAO,CAACU,GAAR,CAAYC,MAAM,IAAI;AACrB,4BACE,QAAC,WAAD;AAAA,kCACE;AAAA,sBAAIA,MAAM,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,aAAD;AAAA,sBAAgBD,MAAM,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAkBF,MAAM,CAACG,EAAzB;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPA;AADH;AAAA;AAAA;AAAA;AAAA,YADD,gBAYC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ,mBADF;AAkBD;;GAhCuBhB,O;UACFP,S;;;KADEO,O","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport * as API from '../../api/api-service';\r\nimport {\r\n  ReviewsAuthor,\r\n  ReviewsItem,\r\n  ReviewsList,\r\n  ReviewsText,\r\n} from './Reviews.styled';\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    API.fetchReviews(movieId)\r\n      .then(({ data }) => {\r\n        setReviews(data.results);\r\n      })\r\n      .catch(error => {\r\n        toast.error(error.message);\r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {reviews.length !== 0 ? (\r\n        <ReviewsList>\r\n          {reviews.map(review => {\r\n            return (\r\n              <ReviewsItem key={review.id}>\r\n                <p>{review.content}</p>\r\n                <ReviewsAuthor>{review.author}</ReviewsAuthor>\r\n              </ReviewsItem>\r\n            );\r\n          })}\r\n        </ReviewsList>\r\n      ) : (\r\n        <ReviewsText>We don't have any reviews for this movie</ReviewsText>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}