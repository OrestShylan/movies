{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orest Shylan\\\\Documents\\\\GitHub\\\\movies\\\\src\\\\components\\\\MoviesItem\\\\MoviesItem.jsx\";\nimport { CartMovie, DescMovie, ImgMovie, SpanMovie, TitleMovie } from './MoviesItem.styled';\nimport { getPosterUrl } from '../../api/api-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MoviesItem = _ref => {\n  let {\n    movieDetails\n  } = _ref;\n  const {\n    poster_path,\n    original_title,\n    overview,\n    genres,\n    vote_average\n  } = movieDetails;\n\n  const genresAll = () => {\n    if (genres) {\n      return genres.map(el => {\n        return el.name;\n      }).join(', ');\n    } else {\n      return 'genres are not defined.';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartMovie, {\n    children: [/*#__PURE__*/_jsxDEV(ImgMovie, {\n      src: getPosterUrl(poster_path),\n      alt: original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TitleMovie, {\n        children: original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DescMovie, {\n        children: [/*#__PURE__*/_jsxDEV(SpanMovie, {\n          children: \"User Score \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), Math.round(vote_average * 100 / 10), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DescMovie, {\n        children: [/*#__PURE__*/_jsxDEV(SpanMovie, {\n          children: \"Overview: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), overview]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DescMovie, {\n        children: [/*#__PURE__*/_jsxDEV(SpanMovie, {\n          children: \"Genres: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), genresAll()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = MoviesItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesItem\");","map":{"version":3,"sources":["C:/Users/Orest Shylan/Documents/GitHub/movies/src/components/MoviesItem/MoviesItem.jsx"],"names":["CartMovie","DescMovie","ImgMovie","SpanMovie","TitleMovie","getPosterUrl","MoviesItem","movieDetails","poster_path","original_title","overview","genres","vote_average","genresAll","map","el","name","join","Math","round"],"mappings":";AAAA,SACEA,SADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,UALF,QAMO,qBANP;AAOA,SAASC,YAAT,QAA6B,uBAA7B;;AACA,OAAO,MAAMC,UAAU,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAC9C,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA,QAA/B;AAAyCC,IAAAA,MAAzC;AAAiDC,IAAAA;AAAjD,MACJL,YADF;;AAGA,QAAMM,SAAS,GAAG,MAAM;AACtB,QAAIF,MAAJ,EAAY;AACV,aAAOA,MAAM,CACVG,GADI,CACAC,EAAE,IAAI;AACT,eAAOA,EAAE,CAACC,IAAV;AACD,OAHI,EAIJC,IAJI,CAIC,IAJD,CAAP;AAKD,KAND,MAMO;AACL,aAAO,yBAAP;AACD;AACF,GAVD;;AAYA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,GAAG,EAAEZ,YAAY,CAACG,WAAD,CAA3B;AAA0C,MAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE,QAAC,UAAD;AAAA,kBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGS,IAAI,CAACC,KAAL,CAAYP,YAAY,GAAG,GAAhB,GAAuB,EAAlC,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,SAAD;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGF,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAUE,QAAC,SAAD;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGG,SAAS,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CApCM;KAAMP,U","sourcesContent":["import {\r\n  CartMovie,\r\n  DescMovie,\r\n  ImgMovie,\r\n  SpanMovie,\r\n  TitleMovie,\r\n} from './MoviesItem.styled';\r\nimport { getPosterUrl } from '../../api/api-service';\r\nexport const MoviesItem = ({ movieDetails }) => {\r\n  const { poster_path, original_title, overview, genres, vote_average } =\r\n    movieDetails;\r\n\r\n  const genresAll = () => {\r\n    if (genres) {\r\n      return genres\r\n        .map(el => {\r\n          return el.name;\r\n        })\r\n        .join(', ');\r\n    } else {\r\n      return 'genres are not defined.';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartMovie>\r\n      <ImgMovie src={getPosterUrl(poster_path)} alt={original_title} />\r\n      <div>\r\n        <TitleMovie>{original_title}</TitleMovie>\r\n        <DescMovie>\r\n          <SpanMovie>User Score </SpanMovie>\r\n          {Math.round((vote_average * 100) / 10)}%\r\n        </DescMovie>\r\n        <DescMovie>\r\n          <SpanMovie>Overview: </SpanMovie>\r\n          {overview}\r\n        </DescMovie>\r\n        <DescMovie>\r\n          <SpanMovie>Genres: </SpanMovie>\r\n          {genresAll()}\r\n        </DescMovie>\r\n      </div>\r\n    </CartMovie>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}