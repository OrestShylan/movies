{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orest Shylan\\\\Documents\\\\GitHub\\\\movies\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\n// import * as API from '../../api/api-service';\n// import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Main, Title } from './Home.styled';\nimport { useFetchTrendingMoviesQuery } from 'redux/movieSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    data: trendingMovies,\n    isLoading\n  } = useFetchTrendingMoviesQuery(); // const [trendingMovies, setTrendingMovies] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // useEffect(() => {\n  //   setIsLoading(true);\n  //   API.fetchTrendingMovies()\n  //     .then(({ data }) => {\n  //       setTrendingMovies(data.results);\n  //     })\n  //     .catch(error => {\n  //       console.log(error);\n  //     })\n  //     .finally(() => {\n  //       setIsLoading(false);\n  //     });\n  // }, []);\n\n  return (\n    /*#__PURE__*/\n    // <Main>\n    //   <Title>Trending Movies Today</Title>\n    //   {isLoading && <Loader />}\n    //   <MoviesList movies={trendingMovies} />\n    // </Main>\n    _jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Trending Movies Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this) : trendingMovies ? /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: trendingMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No trending movies available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Home, \"6cYvEZMMA3Ru7OsItIFSATrKbPk=\", false, function () {\n  return [useFetchTrendingMoviesQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Orest Shylan/Documents/GitHub/movies/src/pages/Home/Home.jsx"],"names":["MoviesList","Loader","Main","Title","useFetchTrendingMoviesQuery","Home","data","trendingMovies","isLoading"],"mappings":";;;AAAA;AACA;AACA,SAASA,UAAT,QAA2B,kCAA3B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,eAA5B;AACA,SAASC,2BAAT,QAA4C,kBAA5C;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7B,QAAM;AACJC,IAAAA,IAAI,EAAEC,cADF;AAEJC,IAAAA;AAFI,MAGFJ,2BAA2B,EAH/B,CAF6B,CAQ7B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA,YAAC,IAAD;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGI,SAAS,gBACR,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADQ,GAEND,cAAc,gBAChB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,cADgB,gBAGhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAiBD;;GA1CuBF,I;UAKlBD,2B;;;KALkBC,I","sourcesContent":["// import * as API from '../../api/api-service';\r\n// import { useState, useEffect } from 'react';\r\nimport { MoviesList } from 'components/MoviesList/MoviesList';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { Main, Title } from './Home.styled';\r\nimport { useFetchTrendingMoviesQuery } from 'redux/movieSlice';\r\n\r\nexport default function Home() {\r\n  \r\n  const {\r\n    data: trendingMovies,\r\n    isLoading,\r\n  } = useFetchTrendingMoviesQuery();\r\n  \r\n  \r\n  // const [trendingMovies, setTrendingMovies] = useState([]);\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   setIsLoading(true);\r\n  //   API.fetchTrendingMovies()\r\n  //     .then(({ data }) => {\r\n  //       setTrendingMovies(data.results);\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(error);\r\n  //     })\r\n  //     .finally(() => {\r\n  //       setIsLoading(false);\r\n  //     });\r\n  // }, []);\r\n\r\n  return (\r\n    // <Main>\r\n    //   <Title>Trending Movies Today</Title>\r\n    //   {isLoading && <Loader />}\r\n    //   <MoviesList movies={trendingMovies} />\r\n    // </Main>\r\n    <Main>\r\n      <Title>Trending Movies Today</Title>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : trendingMovies ? (\r\n        <MoviesList movies={trendingMovies} />\r\n      ) : (\r\n        <p>No trending movies available.</p>\r\n      )}\r\n    </Main>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}