{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orest Shylan\\\\Documents\\\\GitHub\\\\movies\\\\src\\\\components\\\\Cast\\\\Cast.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchCast, getPosterUrl } from '../../api/api-service';\nimport { CastDesc, CastImg, CastItem, CastList, CastName } from './Cast.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cast() {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    fetchCast(movieId).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setCast(data.cast);\n    }).catch(error => {\n      toast.error(error.message);\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(CastList, {\n    children: cast.map(actor => {\n      const {\n        id,\n        name,\n        character,\n        profile_path\n      } = actor;\n      return /*#__PURE__*/_jsxDEV(CastItem, {\n        children: [/*#__PURE__*/_jsxDEV(CastImg, {\n          src: getPosterUrl(profile_path),\n          alt: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(CastName, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CastDesc, {\n          children: [\"Character: \", character]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cast, \"RECX0ZkPp833Bw9L7PJRS5R3l1k=\", false, function () {\n  return [useParams];\n});\n\n_c = Cast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"sources":["C:/Users/Orest Shylan/Documents/GitHub/movies/src/components/Cast/Cast.jsx"],"names":["useEffect","useState","useParams","toast","fetchCast","getPosterUrl","CastDesc","CastImg","CastItem","CastList","CastName","Cast","movieId","cast","setCast","then","data","catch","error","message","map","actor","id","name","character","profile_path"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,uBAAxC;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,QAA5B,EAAsCC,QAAtC,EAAgDC,QAAhD,QAAgE,eAAhE;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAcV,SAAS,EAA7B;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,SAAS,CAACQ,OAAD,CAAT,CACGG,IADH,CACQ,QAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAClBF,MAAAA,OAAO,CAACE,IAAI,CAACH,IAAN,CAAP;AACD,KAHH,EAIGI,KAJH,CAISC,KAAK,IAAI;AACdf,MAAAA,KAAK,CAACe,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD,KANH;AAOD,GARQ,EAQN,CAACP,OAAD,CARM,CAAT;AAUA,sBACE,QAAC,QAAD;AAAA,cACGC,IAAI,CAACO,GAAL,CAASC,KAAK,IAAI;AACjB,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA,SAAZ;AAAuBC,QAAAA;AAAvB,UAAwCJ,KAA9C;AAEA,0BACE,QAAC,QAAD;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,GAAG,EAAEhB,YAAY,CAACoB,YAAD,CAA1B;AAA0C,UAAA,GAAG,EAAEF;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,EAC0D,GAD1D,eAEE,QAAC,QAAD;AAAA,oBAAWA;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,QAAD;AAAA,oCAAsBC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAeF,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KAVA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA7BuBX,I;UACFT,S;;;KADES,I","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { fetchCast, getPosterUrl } from '../../api/api-service';\r\nimport { CastDesc, CastImg, CastItem, CastList, CastName } from './Cast.styled';\r\n\r\nexport default function Cast() {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCast(movieId)\r\n      .then(({ data }) => {\r\n        setCast(data.cast);\r\n      })\r\n      .catch(error => {\r\n        toast.error(error.message);\r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <CastList>\r\n      {cast.map(actor => {\r\n        const { id, name, character, profile_path } = actor;\r\n\r\n        return (\r\n          <CastItem key={id}>\r\n            <CastImg src={getPosterUrl(profile_path)} alt={name} />{' '}\r\n            <CastName>{name}</CastName>\r\n            <CastDesc>Character: {character}</CastDesc>\r\n          </CastItem>\r\n        );\r\n      })}\r\n    </CastList>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}