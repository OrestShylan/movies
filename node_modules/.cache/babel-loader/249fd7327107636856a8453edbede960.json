{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orest Shylan\\\\Documents\\\\GitHub\\\\movies\\\\src\\\\components\\\\SearchForm\\\\SearchForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from 'prop-types';\nimport { fetchMoviesByName } from '../../api/api-service';\nimport { Form, Input, Button } from './SearchForm.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchForm = _ref => {\n  _s();\n\n  let {\n    onSubmit\n  } = _ref;\n  const [searchValue, setSearchValue] = useState('');\n\n  const hendelChange = evt => {\n    setSearchValue(evt.currentTarget.value);\n  };\n\n  const hendelSubmit = async evt => {\n    evt.preventDefault();\n\n    if (searchValue.trim() === '') {\n      toast.warn('Sorry, you need to enter a movie title.');\n      return;\n    } else if (searchValue === '') {\n      onSubmit(searchValue);\n      setSearchValue('');\n    } else {\n      try {\n        const response = await fetchMoviesByName(searchValue);\n        const results = response.data.results;\n\n        if (results.length === 0) {\n          toast.error('No results found.');\n        } else {\n          onSubmit(searchValue);\n          setSearchValue('');\n        }\n      } catch (error) {\n        console.error('Error during search:', error);\n        toast.error('An error occurred while searching. Please try again later.');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: hendelSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Search movie\",\n      value: searchValue,\n      onChange: hendelChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(ImSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchForm, \"HM3Ln43XRFR/2uR77U2yFU1TAX4=\");\n\n_c = SearchForm;\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["C:/Users/Orest Shylan/Documents/GitHub/movies/src/components/SearchForm/SearchForm.jsx"],"names":["useState","toast","ImSearch","PropTypes","fetchMoviesByName","Form","Input","Button","SearchForm","onSubmit","searchValue","setSearchValue","hendelChange","evt","currentTarget","value","hendelSubmit","preventDefault","trim","warn","response","results","data","length","error","console","propTypes","func","isRequired"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,qBAApC;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMY,YAAY,GAAGC,GAAG,IAAI;AAC1BF,IAAAA,cAAc,CAACE,GAAG,CAACC,aAAJ,CAAkBC,KAAnB,CAAd;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAMH,GAAN,IAAa;AAChCA,IAAAA,GAAG,CAACI,cAAJ;;AAEA,QAAIP,WAAW,CAACQ,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BjB,MAAAA,KAAK,CAACkB,IAAN,CAAW,yCAAX;AACA;AACD,KAHD,MAGO,IAAIT,WAAW,KAAK,EAApB,EAAwB;AAC7BD,MAAAA,QAAQ,CAACC,WAAD,CAAR;AACAC,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAHM,MAGA;AACL,UAAI;AACF,cAAMS,QAAQ,GAAG,MAAMhB,iBAAiB,CAACM,WAAD,CAAxC;AACA,cAAMW,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcD,OAA9B;;AACA,YAAIA,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;AACxBtB,UAAAA,KAAK,CAACuB,KAAN,CAAY,mBAAZ;AACD,SAFD,MAEO;AACLf,UAAAA,QAAQ,CAACC,WAAD,CAAR;AACAC,UAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,OATD,CASE,OAAOa,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACAvB,QAAAA,KAAK,CAACuB,KAAN,CACE,4DADF;AAGD;AACF;AACF,GA1BD;;AA4BA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAER,YAAhB;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,cAFd;AAGE,MAAA,KAAK,EAAEN,WAHT;AAIE,MAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhDM;;GAAMJ,U;;KAAAA,U;AAkDbA,UAAU,CAACkB,SAAX,GAAuB;AACrBjB,EAAAA,QAAQ,EAAEN,SAAS,CAACwB,IAAV,CAAeC;AADJ,CAAvB","sourcesContent":["import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { ImSearch } from 'react-icons/im';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchMoviesByName } from '../../api/api-service';\r\n\r\nimport { Form, Input, Button } from './SearchForm.styled';\r\n\r\nexport const SearchForm = ({ onSubmit }) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const hendelChange = evt => {\r\n    setSearchValue(evt.currentTarget.value);\r\n  };\r\n\r\n  const hendelSubmit = async evt => {\r\n    evt.preventDefault();\r\n\r\n    if (searchValue.trim() === '') {\r\n      toast.warn('Sorry, you need to enter a movie title.');\r\n      return;\r\n    } else if (searchValue === '') {\r\n      onSubmit(searchValue);\r\n      setSearchValue('');\r\n    } else {\r\n      try {\r\n        const response = await fetchMoviesByName(searchValue);\r\n        const results = response.data.results;\r\n        if (results.length === 0) {\r\n          toast.error('No results found.');\r\n        } else {\r\n          onSubmit(searchValue);\r\n          setSearchValue('');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during search:', error);\r\n        toast.error(\r\n          'An error occurred while searching. Please try again later.'\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={hendelSubmit}>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search movie\"\r\n        value={searchValue}\r\n        onChange={hendelChange}\r\n      />\r\n      <Button type=\"submit\">\r\n        <ImSearch />\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nSearchForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}