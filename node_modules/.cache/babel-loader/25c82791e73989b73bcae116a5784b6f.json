{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orest Shylan\\\\Documents\\\\GitHub\\\\movies\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport * as API from '../../api/api-service';\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Main, Title } from './Home.styled'; // import { useFetchTrendingMoviesQuery } from 'redux/movieSlice';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    API.fetchTrendingMovies().then(_ref => {\n      let {\n        data\n      } = _ref;\n      setTrendingMovies(data.results);\n    }).catch(error => {\n      console.log(error);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, []); // const { data, isLoading } = useFetchTrendingMoviesQuery();\n  // console.log(data);\n  // const { results: movies } = data;\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Trending Movies Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : trendingMovies ? /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No trending movies available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n} // const [trendingMovies, setTrendingMovies] = useState([]);\n// const [isLoading, setIsLoading] = useState(false);\n// useEffect(() => {\n//   setIsLoading(true);\n//   API.fetchTrendingMovies()\n//     .then(({ data }) => {\n//       setTrendingMovies(data.results);\n//     })\n//     .catch(error => {\n//       console.log(error);\n//     })\n//     .finally(() => {\n//       setIsLoading(false);\n//     });\n// }, []);\n\n_s(Home, \"hr8Mu1PZDTFiJBig+hpZ465Tgcc=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Orest Shylan/Documents/GitHub/movies/src/pages/Home/Home.jsx"],"names":["API","useState","useEffect","MoviesList","Loader","Main","Title","Home","trendingMovies","setTrendingMovies","isLoading","setIsLoading","fetchTrendingMovies","then","data","results","catch","error","console","log","finally","movies"],"mappings":";;;AAAA,OAAO,KAAKA,GAAZ,MAAqB,uBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,eAA5B,C,CACA;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAX,IAAAA,GAAG,CAACY,mBAAJ,GACGC,IADH,CACQ,QAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAClBL,MAAAA,iBAAiB,CAACK,IAAI,CAACC,OAAN,CAAjB;AACD,KAHH,EAIGC,KAJH,CAISC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH,EAOGG,OAPH,CAOW,MAAM;AACbT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KATH;AAUD,GAZQ,EAYN,EAZM,CAAT,CAJ6B,CAiB7B;AACA;AAEA;;AAEA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,SAAS,gBACR,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADQ,GAENF,cAAc,gBAChB,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEa;AAApB;AAAA;AAAA;AAAA;AAAA,YADgB,gBAGhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,C,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAnDwBd,I;;KAAAA,I","sourcesContent":["import * as API from '../../api/api-service';\r\nimport { useState, useEffect } from 'react';\r\nimport { MoviesList } from 'components/MoviesList/MoviesList';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { Main, Title } from './Home.styled';\r\n// import { useFetchTrendingMoviesQuery } from 'redux/movieSlice';\r\n\r\nexport default function Home() {\r\n  const [trendingMovies, setTrendingMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    API.fetchTrendingMovies()\r\n      .then(({ data }) => {\r\n        setTrendingMovies(data.results);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n  // const { data, isLoading } = useFetchTrendingMoviesQuery();\r\n  // console.log(data);\r\n\r\n  // const { results: movies } = data;\r\n\r\n  return (\r\n    <Main>\r\n      <Title>Trending Movies Today</Title>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : trendingMovies ? (\r\n        <MoviesList movies={movies} />\r\n      ) : (\r\n        <p>No trending movies available.</p>\r\n      )}\r\n    </Main>\r\n  );\r\n}\r\n\r\n// const [trendingMovies, setTrendingMovies] = useState([]);\r\n// const [isLoading, setIsLoading] = useState(false);\r\n\r\n// useEffect(() => {\r\n//   setIsLoading(true);\r\n//   API.fetchTrendingMovies()\r\n//     .then(({ data }) => {\r\n//       setTrendingMovies(data.results);\r\n//     })\r\n//     .catch(error => {\r\n//       console.log(error);\r\n//     })\r\n//     .finally(() => {\r\n//       setIsLoading(false);\r\n//     });\r\n// }, []);\r\n"]},"metadata":{},"sourceType":"module"}